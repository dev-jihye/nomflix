{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/code/nomflix/src/Routes/Search/SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 0 20px;\n`;\n_c = Container;\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%\n`;\n_c2 = Form;\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n_c3 = Input;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  handleSubmit,\n  loading,\n  error,\n  updateTerm\n}) => /*#__PURE__*/_jsxDEV(Container, {\n  children: [/*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search Movies or TV Shows\",\n      value: searchTerm,\n      onChange: updateTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 16\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [movieResults && movieResults.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Movie Results\",\n      children: movieResults.map(movie => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: movie.title\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), tvResults && tvResults.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Movie Results\",\n      children: tvResults.map(show => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: show.name\n      }, show.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 1\n}, this);\n\n_c4 = SearchPresenter;\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"Input\");\n$RefreshReg$(_c4, \"SearchPresenter\");","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loader","Section","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","loading","error","updateTerm","length","map","movie","title","id","show","name","propTypes","array","string","bool","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAIN,MAAME,IAAI,GAAGL,MAAM,CAACM,IAAK;AACzB;AACA;AACA,CAHA;MAAMD,I;AAKN,MAAME,KAAK,GAAGP,MAAM,CAACQ,KAAM;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,K;;AAMN,MAAME,eAAe,GAAG,CAAC;AACrBC,EAAAA,YADqB;AAErBC,EAAAA,SAFqB;AAGrBC,EAAAA,UAHqB;AAIrBC,EAAAA,YAJqB;AAKrBC,EAAAA,OALqB;AAMrBC,EAAAA,KANqB;AAOrBC,EAAAA;AAPqB,CAAD,kBASxB,QAAC,SAAD;AAAA,0BACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEH,YAAhB;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAC,2BAAnB;AAA+C,MAAA,KAAK,EAAED,UAAtD;AAAkE,MAAA,QAAQ,EAAEI;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,EAIKF,OAAO,gBAAG,QAAE,MAAF;AAAA;AAAA;AAAA;AAAA,UAAH,gBAAiB;AAAA,eACpBJ,YAAY,IAAIA,YAAY,CAACO,MAAb,GAAsB,CAAtC,iBACG,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AAAA,gBACKP,YAAY,CAACQ,GAAb,CAAiBC,KAAK,iBACnB;AAAA,kBAAsBA,KAAK,CAACC;AAA5B,SAAWD,KAAK,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFiB,EAQpBV,SAAS,IAAIA,SAAS,CAACM,MAAV,GAAmB,CAAhC,iBACG,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AAAA,gBACKN,SAAS,CAACO,GAAV,CAAcI,IAAI,iBACf;AAAA,kBAAqBA,IAAI,CAACC;AAA1B,SAAWD,IAAI,CAACD,EAAhB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YATiB;AAAA,kBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA,QATA;;MAAMZ,e;AA+BNA,eAAe,CAACe,SAAhB,GAA4B;AACxBd,EAAAA,YAAY,EAAEX,SAAS,CAAC0B,KADA;AAExBd,EAAAA,SAAS,EAAEZ,SAAS,CAAC0B,KAFG;AAGxBb,EAAAA,UAAU,EAAEb,SAAS,CAAC2B,MAHE;AAIxBZ,EAAAA,OAAO,EAAEf,SAAS,CAAC4B,IAAV,CAAeC,UAJA;AAKxBb,EAAAA,KAAK,EAAEhB,SAAS,CAAC2B,MALO;AAMxBb,EAAAA,YAAY,EAAEd,SAAS,CAAC8B,IAAV,CAAeD,UANL;AAOxBZ,EAAAA,UAAU,EAAEjB,SAAS,CAAC8B,IAAV,CAAeD;AAPH,CAA5B;AAUA,eAAenB,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\n\nconst Container = styled.div`\n    padding: 0 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults, \n    tvResults, \n    searchTerm, \n    handleSubmit, \n    loading, \n    error,\n    updateTerm\n}) => (\n<Container>\n    <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows\" value={searchTerm} onChange={updateTerm}/>\n    </Form>\n    {loading ? < Loader /> : <>\n        {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n                {movieResults.map(movie =>( \n                    <span key={movie.id}>{movie.title}</span>\n                ))}\n            </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n            <Section title=\"Movie Results\">\n                {tvResults.map(show =>( \n                    <span key={show.id}>{show.name}</span>\n                ))}\n            </Section>\n        )}\n    </>}\n</Container>);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}