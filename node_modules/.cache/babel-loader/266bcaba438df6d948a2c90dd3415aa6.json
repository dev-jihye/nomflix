{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/code/nomflix/src/Routes/Detail/DetailContainer.js\";\nimport { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: {\n        pathname\n      }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: {\n          id\n        }\n      },\n      history: {\n        push\n      }\n    } = this.props;\n    const {\n      isMovie\n    } = this.state;\n    const parsedId = Number(id);\n\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n\n    let result = null;\n\n    try {\n      if (isMovie) {\n        ({\n          data: result\n        } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({\n          data: result\n        } = await tvApi.showDetail(parsedId));\n      }\n\n      console.log(result);\n    } catch {\n      this.setState({\n        error: \"Can't find.\"\n      });\n    } finally {\n      this.setState({\n        loading: false,\n        result\n      });\n    }\n  }\n\n  render() {\n    const {\n      result,\n      error,\n      loading\n    } = this.state;\n    console.log(this.state);\n    return /*#__PURE__*/_jsxDEV(DetailPresenter, {\n      result: result,\n      error: error,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/Detail/DetailContainer.js"],"names":["moviesApi","tvApi","React","DetailPresenter","Component","constructor","props","location","pathname","state","result","error","loading","isMovie","includes","componentDidMount","match","params","id","history","push","parsedId","Number","isNaN","data","movieDetail","showDetail","console","log","setState","render"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,KAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,eAAe,cAAcD,KAAK,CAACE,SAApB,CAA6B;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,UAAM;AACFC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF;AADR,QAEFF,KAFJ;AAGA,SAAKG,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,IADC;AAETC,MAAAA,KAAK,EAAE,IAFE;AAGTC,MAAAA,OAAO,EAAE,IAHA;AAITC,MAAAA,OAAO,EAAEL,QAAQ,CAACM,QAAT,CAAkB,SAAlB;AAJA,KAAb;AAMH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAM;AACFC,MAAAA,KAAK,EAAE;AACHC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AADL,OADL;AAIFC,MAAAA,OAAO,EAAE;AAAEC,QAAAA;AAAF;AAJP,QAKF,KAAKd,KALT;AAOA,UAAM;AAAEO,MAAAA;AAAF,QAAc,KAAKJ,KAAzB;AACA,UAAMY,QAAQ,GAAGC,MAAM,CAACJ,EAAD,CAAvB;;AAEA,QAAGK,KAAK,CAACF,QAAD,CAAR,EAAmB;AACf,aAAOD,IAAI,CAAC,GAAD,CAAX;AACH;;AAED,QAAIV,MAAM,GAAG,IAAb;;AAEA,QAAI;AACA,UAAGG,OAAH,EAAW;AACP,SAAC;AAAEW,UAAAA,IAAI,EAAEd;AAAR,YAAmB,MAAMV,SAAS,CAACyB,WAAV,CAAsBJ,QAAtB,CAA1B;AACH,OAFD,MAEO;AACH,SAAC;AAAEG,UAAAA,IAAI,EAAEd;AAAR,YAAmB,MAAMT,KAAK,CAACyB,UAAN,CAAiBL,QAAjB,CAA1B;AACH;;AACDM,MAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACH,KAPD,CAOE,MAAM;AACJ,WAAKmB,QAAL,CAAc;AAAElB,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KATD,SASU;AACN,WAAKkB,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA;AAAlB,OAAd;AACH;AACJ;;AAEDoB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEpB,MAAAA,MAAF;AAAUC,MAAAA,KAAV;AAAiBC,MAAAA;AAAjB,QAA6B,KAAKH,KAAxC;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAjB;AACA,wBACI,QAAC,eAAD;AACI,MAAA,MAAM,EAAEC,MADZ;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,OAAO,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAvDuC","sourcesContent":["import { moviesApi, tvApi } from \"api\";\nimport React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component{\n    constructor(props){\n        super(props);\n        const {\n            location: { pathname }\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id }\n            },\n            history: { push }\n        } = this.props;\n\n        const { isMovie } = this.state;\n        const parsedId = Number(id);\n        \n        if(isNaN(parsedId)){\n            return push(\"/\");\n        }\n        \n        let result = null;\n\n        try {\n            if(isMovie){\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n            console.log(result);\n        } catch {\n            this.setState({ error: \"Can't find.\"})\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        console.log(this.state);\n        return (\n            <DetailPresenter \n                result={result}\n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}