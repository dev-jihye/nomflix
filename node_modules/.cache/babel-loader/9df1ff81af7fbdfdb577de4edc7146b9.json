{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/code/nomflix/src/Routes/Detail/DetailPresenter.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport logo from \"../../assets/Logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n_c = Container;\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n_c2 = Backdrop;\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n_c3 = Content;\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n_c4 = Cover;\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n_c5 = Data;\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n_c6 = Title;\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n_c7 = ItemContainer;\nconst Item = styled.span`\n\n`;\n_c8 = Item;\nconst Link = styled.a`\n    \n`;\n_c9 = Link;\nconst Img = styled.img`\n    width: 35px;\n    position: relative;\n    top: 4px;\n`;\n_c10 = Img;\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n_c11 = Divider;\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n_c12 = Overview;\nconst ListContainer = styled.ul`\n    display: flex;\n    margin-top: 30px;\n`;\n_c13 = ListContainer;\nconst List = styled.li`\n    padding: 20px 30px;\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 5px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n    margin-right: 5px;\n`;\n_c14 = List;\nconst Video = styled.div`\n    margin-top: 20px;\n`;\n\nconst useTab = initTab => {\n  _s();\n\n  const [tab, setTab] = useState(initTab);\n  return {\n    tab,\n    setTab\n  };\n};\n\n_s(useTab, \"mwxstgQJPjeGmVvL40NEnMdEnxk=\");\n\nconst DetailPresenter = ({\n  result,\n  loading,\n  error,\n  isMovie\n}) => {\n  return loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Loading | Nomflix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: [result.original_title ? result.original_title : result.original_name, \" \", \" | Nomflix\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Backdrop, {\n      bgImage: `https://image.tmdb.org/t/p/original${result.backdrop_path}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Cover, {\n        bgImage: result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/noPosterSmall.png\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Data, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: result.original_title ? result.original_title : result.original_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ItemContainer, {\n          children: [/*#__PURE__*/_jsxDEV(Item, {\n            children: result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: [result.runtime ? result.runtime : result.episode_run_time[0], \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Item, {\n            children: result.genres && result.genres.map((genre, index) => index === result.genres.length - 1 ? genre.name : `${genre.name} / `)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: \"\\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            target: \"_blank\",\n            href: `https://imdb.com/title/` + result.imdb_id,\n            children: /*#__PURE__*/_jsxDEV(Img, {\n              src: logo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 101\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Overview, {\n          children: result.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ListContainer, {\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              children: \"Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              children: \"Production\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 33\n            }, this), !isMovie && /*#__PURE__*/_jsxDEV(List, {\n              children: \"Seasons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n};\n\n_c15 = DetailPresenter;\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default DetailPresenter;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Backdrop\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Cover\");\n$RefreshReg$(_c5, \"Data\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"ItemContainer\");\n$RefreshReg$(_c8, \"Item\");\n$RefreshReg$(_c9, \"Link\");\n$RefreshReg$(_c10, \"Img\");\n$RefreshReg$(_c11, \"Divider\");\n$RefreshReg$(_c12, \"Overview\");\n$RefreshReg$(_c13, \"ListContainer\");\n$RefreshReg$(_c14, \"List\");\n$RefreshReg$(_c15, \"DetailPresenter\");","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/Detail/DetailPresenter.js"],"names":["React","PropTypes","styled","Helmet","Loader","logo","Container","div","Backdrop","props","bgImage","Content","Cover","Data","Title","h3","ItemContainer","Item","span","Link","a","Img","img","Divider","Overview","p","ListContainer","ul","List","li","Video","useTab","initTab","tab","setTab","useState","DetailPresenter","result","loading","error","isMovie","original_title","original_name","backdrop_path","poster_path","require","release_date","substring","first_air_date","runtime","episode_run_time","genres","map","genre","index","length","name","imdb_id","overview","propTypes","object","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport logo from \"../../assets/Logo.png\"\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\n\nconst Item = styled.span`\n\n`;\n\nconst Link = styled.a`\n    \n`;\n\nconst Img = styled.img`\n    width: 35px;\n    position: relative;\n    top: 4px;\n`;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst ListContainer = styled.ul`\n    display: flex;\n    margin-top: 30px;\n`;\n\nconst List = styled.li`\n    padding: 20px 30px;\n    background-color: rgba(0, 0, 0, 0.5);\n    border-radius: 5px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n    margin-right: 5px;\n`;\n\nconst Video = styled.div`\n    margin-top: 20px;\n`;\n\nconst useTab = (initTab) => {\n    const [tab, setTab] = useState(initTab);\n    return {tab, setTab};\n}\n\nconst DetailPresenter = ({result, loading, error, isMovie}) => {\n\n    return (\n        loading ? (\n            <>\n            <Helmet>\n                <title>Loading | Nomflix</title>\n            </Helmet>\n            <Loader />\n            </>\n        ) : (\n            <Container>\n                <Helmet>\n                    <title>\n                        {result.original_title ? result.original_title : result.original_name}{\" \"} | Nomflix\n                    </title>\n                </Helmet>\n                <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n                <Content>\n                    <Cover bgImage={\n                        result.poster_path \n                            ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                            : require(\"../../assets/noPosterSmall.png\")\n                        } \n                    />\n                    <Data>\n                        <Title>\n                            {result.original_title \n                                ? result.original_title \n                                : result.original_name}\n                        </Title>\n                        <ItemContainer>\n                            <Item>\n                                {result.release_date \n                                    ? result.release_date.substring(0, 4) \n                                    : result.first_air_date.substring(0, 4)}\n                            </Item>\n                            <Divider>•</Divider>\n                            <Item>\n                                {result.runtime \n                                    ? result.runtime \n                                    : result.episode_run_time[0]} min\n                            </Item>\n                            <Divider>•</Divider>\n                            <Item>\n                                {result.genres && result.genres.map((genre, index) => \n                                    index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                                )} \n                            </Item>\n                            <Divider>•</Divider>\n                            <Link target=\"_blank\" href={`https://imdb.com/title/` + result.imdb_id}><Img src={logo}></Img></Link>\n                        </ItemContainer>\n                        <Overview>{result.overview}</Overview>\n                        <div>\n                            <ListContainer>\n                                <List>\n                                    Video\n                                </List>\n                                <List>\n                                    Production\n                                </List>\n                                {!isMovie && <List>\n                                    Seasons\n                                </List>}\n                            </ListContainer>\n                            {/* <div>\n                                <Video>\n                                    {result.videos.results && result.videos.results.map(video => (\n                                        video.key ? <iframe width=\"560\" height=\"315\" src={`https://www.youtube.com/embed/${video.key}`} title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe> : \"n\"\n                                    ))}\n                                </Video>\n                            </div> */}\n                        </div>\n                    </Data>\n                </Content>\n            </Container> )\n    )\n\n};\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;"]},"metadata":{},"sourceType":"module"}