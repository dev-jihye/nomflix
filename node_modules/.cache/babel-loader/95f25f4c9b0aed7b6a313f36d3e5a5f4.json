{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sophie/code/nomflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3;import React from\"react\";import styled from\"styled-components\";import Helmet from\"react-helmet\";import Loader from\"Components/Loader\";import Section from\"Components/Section\";import Message from\"Components/Message\";import Poster from\"Components/Poster\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 0 20px;\\n\"])));var Form=styled.form(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n    margin-bottom: 50px;\\n    width: 100%\\n\"])));var Input=styled.input(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    all: unset;\\n    font-size: 28px;\\n    width: 100%;\\n\"])));var SearchPresenter=function SearchPresenter(_ref){var movieResults=_ref.movieResults,tvResults=_ref.tvResults,searchTerm=_ref.searchTerm,handleSubmit=_ref.handleSubmit,loading=_ref.loading,error=_ref.error,updateTerm=_ref.updateTerm;return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"Search | Nomflix\"})}),/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(Input,{placeholder:\"Search Movies or TV Shows\",value:searchTerm,onChange:updateTerm})}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[movieResults&&movieResults.length>0&&/*#__PURE__*/_jsx(Section,{title:\"Movie Results\",children:movieResults.map(function(movie){return/*#__PURE__*/_jsx(Poster,{id:movie.id,imageUrl:movie.poster_path,title:movie.original_title,rating:movie.vote_average,year:movie.release_date&&movie.release_date.substring(0,4),isMovie:true},movie.id);})}),tvResults&&tvResults.length>0&&/*#__PURE__*/_jsx(Section,{title:\"TV Show  Results\",children:tvResults.map(function(show){return/*#__PURE__*/_jsx(Poster,{id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4)},show.id);})}),error&&/*#__PURE__*/_jsx(Message,{color:\"#e74c3c\",text:error}),tvResults&&movieResults&&tvResults.length===0&&movieResults.length===0&&/*#__PURE__*/_jsx(Message,{text:\"Nothing found\",color:\"#95a5a6\"})]})]});};export default SearchPresenter;","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/Search/SearchPresenter.js"],"names":["React","styled","Helmet","Loader","Section","Message","Poster","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","loading","error","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date"],"mappings":"uNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,yFAAf,CAIA,GAAMC,CAAAA,IAAI,CAAGR,MAAM,CAACS,IAAV,gHAAV,CAKA,GAAMC,CAAAA,KAAK,CAAGV,MAAM,CAACW,KAAV,8HAAX,CAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UACpBC,CAAAA,YADoB,MACpBA,YADoB,CAEpBC,SAFoB,MAEpBA,SAFoB,CAGpBC,UAHoB,MAGpBA,UAHoB,CAIpBC,YAJoB,MAIpBA,YAJoB,CAKpBC,OALoB,MAKpBA,OALoB,CAMpBC,KANoB,MAMpBA,KANoB,CAOpBC,UAPoB,MAOpBA,UAPoB,oBASxB,MAAC,SAAD,yBACI,KAAC,MAAD,wBAAQ,2CAAR,EADJ,cAEI,KAAC,IAAD,EAAM,QAAQ,CAAEH,YAAhB,uBACI,KAAC,KAAD,EAAO,WAAW,CAAC,2BAAnB,CAA+C,KAAK,CAAED,UAAtD,CAAkE,QAAQ,CAAEI,UAA5E,EADJ,EAFJ,CAKKF,OAAO,cAAG,KAAE,MAAF,IAAH,cAAkB,2BACrBJ,YAAY,EAAIA,YAAY,CAACO,MAAb,CAAsB,CAAtC,eACG,KAAC,OAAD,EAAS,KAAK,CAAC,eAAf,UACKP,YAAY,CAACQ,GAAb,CAAiB,SAAAC,KAAK,qBACnB,KAAC,MAAD,EAEI,EAAE,CAAEA,KAAK,CAACC,EAFd,CAGI,QAAQ,CAAED,KAAK,CAACE,WAHpB,CAII,KAAK,CAAEF,KAAK,CAACG,cAJjB,CAKI,MAAM,CAAEH,KAAK,CAACI,YALlB,CAMI,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAA+B,CAA/B,CANhC,CAOI,OAAO,CAAE,IAPb,EACSN,KAAK,CAACC,EADf,CADmB,EAAtB,CADL,EAFkB,CAgBrBT,SAAS,EAAIA,SAAS,CAACM,MAAV,CAAmB,CAAhC,eACG,KAAC,OAAD,EAAS,KAAK,CAAC,kBAAf,UACKN,SAAS,CAACO,GAAV,CAAc,SAAAQ,IAAI,qBACf,KAAC,MAAD,EAEI,EAAE,CAAEA,IAAI,CAACN,EAFb,CAGI,QAAQ,CAAEM,IAAI,CAACL,WAHnB,CAII,KAAK,CAAEK,IAAI,CAACC,aAJhB,CAKI,MAAM,CAAED,IAAI,CAACH,YALjB,CAMI,IAAI,CAAEG,IAAI,CAACE,cAAL,EAAuBF,IAAI,CAACE,cAAL,CAAoBH,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CANjC,EACSC,IAAI,CAACN,EADd,CADe,EAAlB,CADL,EAjBkB,CA8BrBL,KAAK,eAAI,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAEA,KAA/B,EA9BY,CA+BrBJ,SAAS,EACVD,YADC,EAEDC,SAAS,CAACM,MAAV,GAAqB,CAFpB,EAGDP,YAAY,CAACO,MAAb,GAAwB,CAHvB,eAIG,KAAC,OAAD,EAAS,IAAI,CAAC,eAAd,CAA8B,KAAK,CAAC,SAApC,EAnCkB,GAL9B,GATwB,EAAxB,CAgEA,cAAeR,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults, \n    tvResults, \n    searchTerm, \n    handleSubmit, \n    loading, \n    error,\n    updateTerm\n}) => (\n<Container>\n    <Helmet><title>Search | Nomflix</title></Helmet>\n    <Form onSubmit={handleSubmit}>\n        <Input placeholder=\"Search Movies or TV Shows\" value={searchTerm} onChange={updateTerm}/>\n    </Form>\n    {loading ? < Loader /> : (<>\n        {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n                {movieResults.map(movie =>( \n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0,4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Show  Results\">\n                {tvResults.map(show =>( \n                    <Poster \n                        key={show.id} \n                        id={show.id} \n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0,4)}\n                    />\n                ))}\n            </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error}/>}\n        {tvResults && \n        movieResults && \n        tvResults.length === 0 && \n        movieResults.length === 0  && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\"/>\n            )}\n    </>)}\n</Container>);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}