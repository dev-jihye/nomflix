{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/code/nomflix/src/Routes/Home/HomePresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 0 20px;\n`;\n_c = Container;\n\nconst HomePresenter = ({\n  nowPlaying,\n  popular,\n  upcoming,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 9\n}, this) : /*#__PURE__*/_jsxDEV(Container, {\n  children: [nowPlaying && nowPlaying.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Now Playing\",\n    children: nowPlaying.map(movie => /*#__PURE__*/_jsxDEV(Poster, {\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.original_title,\n      rating: movie.vote_average,\n      year: movie.release_date && movie.release_date.substring(0, 4),\n      isMovie: true\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this), upcoming && upcoming.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Upcoming Movies\",\n    children: upcoming.map(movie => /*#__PURE__*/_jsxDEV(Poster, {\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.original_title,\n      rating: movie.vote_average,\n      year: movie.release_date && movie.release_date.substring(0, 4),\n      isMovie: true\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }, this), popular && popular.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Popular Movies\",\n    children: popular.map(movie => /*#__PURE__*/_jsxDEV(Poster, {\n      id: movie.id,\n      imageUrl: movie.poster_path,\n      title: movie.original_title,\n      rating: movie.vote_average,\n      year: movie.release_date && movie.release_date.substring(0, 4),\n      isMovie: true\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n    color: \"#e74c3c\",\n    text: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 9\n}, this);\n\n_c2 = HomePresenter;\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default HomePresenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"HomePresenter\");","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/Home/HomePresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","HomePresenter","nowPlaying","popular","upcoming","loading","error","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","propTypes","array","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,SAAS,GAAGL,MAAM,CAACM,GAAI;AAC7B;AACA,CAFA;KAAMD,S;;AAIN,MAAME,aAAa,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA,OAAhC;AAAyCC,EAAAA;AAAzC,CAAD,KAClBD,OAAO,gBACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QADG,gBAGH,QAAC,SAAD;AAAA,aACKH,UAAU,IAAIA,UAAU,CAACK,MAAX,GAAoB,CAAlC,iBACG,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,aAAf;AAAA,cACKL,UAAU,CAACM,GAAX,CAAeC,KAAK,iBACrB,QAAC,MAAD;AAEI,MAAA,EAAE,EAAEA,KAAK,CAACC,EAFd;AAGI,MAAA,QAAQ,EAAED,KAAK,CAACE,WAHpB;AAII,MAAA,KAAK,EAAEF,KAAK,CAACG,cAJjB;AAKI,MAAA,MAAM,EAAEH,KAAK,CAACI,YALlB;AAMI,MAAA,IAAI,EAAEJ,KAAK,CAACK,YAAN,IAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAA+B,CAA/B,CANhC;AAOI,MAAA,OAAO,EAAE;AAPb,OACSN,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UAFR,EAgBKN,QAAQ,IAAIA,QAAQ,CAACG,MAAT,GAAkB,CAA9B,iBACG,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,iBAAf;AAAA,cACKH,QAAQ,CAACI,GAAT,CAAaC,KAAK,iBACnB,QAAC,MAAD;AAEI,MAAA,EAAE,EAAEA,KAAK,CAACC,EAFd;AAGI,MAAA,QAAQ,EAAED,KAAK,CAACE,WAHpB;AAII,MAAA,KAAK,EAAEF,KAAK,CAACG,cAJjB;AAKI,MAAA,MAAM,EAAEH,KAAK,CAACI,YALlB;AAMI,MAAA,IAAI,EAAEJ,KAAK,CAACK,YAAN,IAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAA+B,CAA/B,CANhC;AAOI,MAAA,OAAO,EAAE;AAPb,OACSN,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UAjBR,EA+BKP,OAAO,IAAIA,OAAO,CAACI,MAAR,GAAiB,CAA5B,iBACG,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,gBAAf;AAAA,cACKJ,OAAO,CAACK,GAAR,CAAYC,KAAK,iBAClB,QAAC,MAAD;AAEI,MAAA,EAAE,EAAEA,KAAK,CAACC,EAFd;AAGI,MAAA,QAAQ,EAAED,KAAK,CAACE,WAHpB;AAII,MAAA,KAAK,EAAEF,KAAK,CAACG,cAJjB;AAKI,MAAA,MAAM,EAAEH,KAAK,CAACI,YALlB;AAMI,MAAA,IAAI,EAAEJ,KAAK,CAACK,YAAN,IAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAA+B,CAA/B,CANhC;AAOI,MAAA,OAAO,EAAE;AAPb,OACSN,KAAK,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,YADC;AADL;AAAA;AAAA;AAAA;AAAA,UAhCR,EA8CKJ,KAAK,iBAAI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,IAAI,EAAEA;AAA/B;AAAA;AAAA;AAAA;AAAA,UA9Cd;AAAA;AAAA;AAAA;AAAA;AAAA,QAJR;;MAAML,a;AAsDNA,aAAa,CAACe,SAAd,GAA0B;AACtBd,EAAAA,UAAU,EAACT,SAAS,CAACwB,KADC;AAEtBd,EAAAA,OAAO,EAACV,SAAS,CAACwB,KAFI;AAGtBb,EAAAA,QAAQ,EAACX,SAAS,CAACwB,KAHG;AAItBZ,EAAAA,OAAO,EAACZ,SAAS,CAACyB,IAAV,CAAeC,UAJD;AAKtBb,EAAAA,KAAK,EAACb,SAAS,CAAC2B;AALM,CAA1B;AAQA,eAAenB,aAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, popular, upcoming, loading, error}) => \n    loading ? (\n        <Loader />\n        ) : (\n        <Container>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie =>(\n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0,4)}\n                        isMovie={true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming Movies\">\n                    {upcoming.map(movie => \n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0,4)}\n                        isMovie={true}\n                        />\n                    )}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Movies\">\n                    {popular.map(movie => \n                    <Poster \n                        key={movie.id} \n                        id={movie.id} \n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0,4)}\n                        isMovie={true}\n                        />\n                    )}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n        </Container>\n    );\n\nHomePresenter.propTypes = {\n    nowPlaying:PropTypes.array,\n    popular:PropTypes.array,\n    upcoming:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default HomePresenter;"]},"metadata":{},"sourceType":"module"}