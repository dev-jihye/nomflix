{"ast":null,"code":"var _jsxFileName = \"/Users/sophie/code/nomflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 9\n}, this) : /*#__PURE__*/_jsxDEV(Container, {\n  children: [topRated && topRated.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Top Rated Shows\",\n    children: topRated.map(show => /*#__PURE__*/_jsxDEV(Poster, {\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.original_name,\n      rating: show.vote_average,\n      year: show.first_air_date && show.first_air_date.substring(0, 4)\n    }, show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }, this), popular && popular.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Popular Shows\",\n    children: popular.map(show => /*#__PURE__*/_jsxDEV(Poster, {\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.original_name,\n      rating: show.vote_average,\n      year: show.first_air_date && show.first_air_date.substring(0, 4)\n    }, show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }, this), airingToday && airingToday.length > 0 && /*#__PURE__*/_jsxDEV(Section, {\n    title: \"Airing Today\",\n    children: airingToday.map(show => /*#__PURE__*/_jsxDEV(Poster, {\n      id: show.id,\n      imageUrl: show.poster_path,\n      title: show.original_name,\n      rating: show.vote_average,\n      year: show.first_air_date && show.first_air_date.substring(0, 4)\n    }, show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 17\n  }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n    color: \"#e74c3c\",\n    text: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 23\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 9\n}, this);\n\n_c2 = TVPresenter;\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"TVPresenter\");","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","original_name","vote_average","first_air_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \n    loading ? (\n        <Loader />\n        ) : (\n        <Container>\n            { topRated && topRated.length > 0 && ( \n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(show => \n                        <Poster \n                            key={show.id} \n                            id={show.id} \n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                        />\n                    )}\n                </Section>\n            )}\n            { popular && popular.length > 0 && ( \n                <Section title=\"Popular Shows\">\n                    {popular.map(show => \n                        <Poster \n                            key={show.id} \n                            id={show.id} \n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                        />\n                    )}\n                </Section>\n            )}\n            { airingToday && airingToday.length > 0 && ( \n                <Section title=\"Airing Today\">\n                    {airingToday.map(show => \n                        <Poster \n                            key={show.id} \n                            id={show.id} \n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0,4)}\n                        />\n                    )}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error}/>}\n        </Container>\n    );\n\n\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}