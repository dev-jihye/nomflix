{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/sophie/code/nomflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React from\"react\";import styled from\"styled-components\";import Helmet from\"react-helmet\";import Section from\"Components/Section\";import Loader from\"Components/Loader\";import Message from\"Components/Message\";import Poster from\"Components/Poster\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 20px;\\n\"])));var TVPresenter=function TVPresenter(_ref){var topRated=_ref.topRated,popular=_ref.popular,airingToday=_ref.airingToday,loading=_ref.loading,error=_ref.error;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Helmet,{children:/*#__PURE__*/_jsx(\"title\",{children:\"TV Show | Nomflix\"})}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(Container,{children:[topRated&&topRated.length>0&&/*#__PURE__*/_jsx(Section,{title:\"Top Rated Shows\",children:topRated.map(function(show){return/*#__PURE__*/_jsx(Poster,{id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4)},show.id);})}),popular&&popular.length>0&&/*#__PURE__*/_jsx(Section,{title:\"Popular Shows\",children:popular.map(function(show){return/*#__PURE__*/_jsx(Poster,{id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4)},show.id);})}),airingToday&&airingToday.length>0&&/*#__PURE__*/_jsx(Section,{title:\"Airing Today\",children:airingToday.map(function(show){return/*#__PURE__*/_jsx(Poster,{id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4)},show.id);})}),error&&/*#__PURE__*/_jsx(Message,{color:\"#e74c3c\",text:error})]})]});};export default TVPresenter;","map":{"version":3,"sources":["/Users/sophie/code/nomflix/src/Routes/TV/TVPresenter.js"],"names":["React","styled","Helmet","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","original_name","vote_average","first_air_date","substring"],"mappings":"qLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,C,6IAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,uFAAf,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAEC,CAAAA,QAAF,MAAEA,QAAF,CAAYC,OAAZ,MAAYA,OAAZ,CAAqBC,WAArB,MAAqBA,WAArB,CAAkCC,OAAlC,MAAkCA,OAAlC,CAA2CC,KAA3C,MAA2CA,KAA3C,oBAChB,wCACI,KAAC,MAAD,wBACI,4CADJ,EADJ,CAIKD,OAAO,cACJ,KAAC,MAAD,IADI,cAGJ,MAAC,SAAD,YACMH,QAAQ,EAAIA,QAAQ,CAACK,MAAT,CAAkB,CAA9B,eACE,KAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,UACKL,QAAQ,CAACM,GAAT,CAAa,SAAAC,IAAI,qBACd,KAAC,MAAD,EAEI,EAAE,CAAEA,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CANjC,EACSN,IAAI,CAACC,EADd,CADc,EAAjB,CADL,EAFR,CAeMP,OAAO,EAAIA,OAAO,CAACI,MAAR,CAAiB,CAA5B,eACE,KAAC,OAAD,EAAS,KAAK,CAAC,eAAf,UACKJ,OAAO,CAACK,GAAR,CAAY,SAAAC,IAAI,qBACb,KAAC,MAAD,EAEI,EAAE,CAAEA,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CANjC,EACSN,IAAI,CAACC,EADd,CADa,EAAhB,CADL,EAhBR,CA6BMN,WAAW,EAAIA,WAAW,CAACG,MAAZ,CAAqB,CAApC,eACE,KAAC,OAAD,EAAS,KAAK,CAAC,cAAf,UACKH,WAAW,CAACI,GAAZ,CAAgB,SAAAC,IAAI,qBACjB,KAAC,MAAD,EAEI,EAAE,CAAEA,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAgC,CAAhC,CANjC,EACSN,IAAI,CAACC,EADd,CADiB,EAApB,CADL,EA9BR,CA2CKJ,KAAK,eAAI,KAAC,OAAD,EAAS,KAAK,CAAC,SAAf,CAAyB,IAAI,CAAEA,KAA/B,EA3Cd,GAPR,GADgB,EAApB,CAmEA,cAAeL,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => (\n    <>  \n        <Helmet>\n            <title>TV Show | Nomflix</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n            ) : (\n            <Container>\n                { topRated && topRated.length > 0 && ( \n                    <Section title=\"Top Rated Shows\">\n                        {topRated.map(show => \n                            <Poster \n                                key={show.id} \n                                id={show.id} \n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            />\n                        )}\n                    </Section>\n                )}\n                { popular && popular.length > 0 && ( \n                    <Section title=\"Popular Shows\">\n                        {popular.map(show => \n                            <Poster \n                                key={show.id} \n                                id={show.id} \n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            />\n                        )}\n                    </Section>\n                )}\n                { airingToday && airingToday.length > 0 && ( \n                    <Section title=\"Airing Today\">\n                        {airingToday.map(show => \n                            <Poster \n                                key={show.id} \n                                id={show.id} \n                                imageUrl={show.poster_path}\n                                title={show.original_name}\n                                rating={show.vote_average}\n                                year={show.first_air_date && show.first_air_date.substring(0,4)}\n                            />\n                        )}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}/>}\n            </Container>\n        )}\n    </>\n)\n\n\n\nTVPresenter.propTypes = {\n    topRated:PropTypes.array,\n    popular:PropTypes.array,\n    airingToday:PropTypes.array,\n    loading:PropTypes.bool.isRequired,\n    error:PropTypes.string\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}